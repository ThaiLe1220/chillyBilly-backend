# ./docker-compose.yml

version: "3.8"

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: tts_app
      POSTGRES_USER: tts_user
      POSTGRES_PASSWORD: tts_eugene
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tts_user -d tts_app"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: uvicorn app:app --host 0.0.0.0 --port 5000 --reload
    volumes:
      - ./backend:/app
      - ./output:/app/output
      - pip_cache:/root/.cache/pip
    ports:
      - "5000:5000"
    environment:
      - DATABASE_URL=postgresql://tts_user:tts_eugene@db/tts_app
      - TTS_API_URL=http://tts_api:8080
    depends_on:
      - db
      - tts_api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  tts_api:
    build:
      context: ./tts_api
      dockerfile: Dockerfile
      args:
        HF_TOKEN: ${HF_TOKEN}
    env_file:
      - .env
    ports:
      - "8080:8080"
    volumes:
      - ./output:/app/output
      - model_cache:/root/.cache/tortoise/models
      - pip_cache:/root/.cache/pip
      - ./tts_api/tortoise/voices:/app/tts_api/tortoise/voices
    environment:
      - FLASK_ENV=production
      - PYTHONUNBUFFERED=1
      - TRANSFORMERS_VERBOSITY=info
      - CUDA_VISIBLE_DEVICES=0
      - HF_TOKEN=${HF_TOKEN}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    stop_grace_period: 1m
    restart: unless-stopped

volumes:
  postgres_data:
  model_cache:
  pip_cache:
